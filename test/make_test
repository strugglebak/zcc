#!/bin/sh

# TEST="test"
# ASSERT="assert"
# ERROR="error"

# (cd $TEST)

if [ ! -f ../parser ];
then
  (cd ..; make clean && make)
fi

# if [ "$1" = "-s" ];
# then
#   # 不能为空串
#   if [ -z "$2" ];
#   then
#     echo "Warning:"
#     echo "-s means make a single test"
#     echo "You should type like './make_test -s 01'"
#     exit 1
#   fi

#   if [ ! -f "input$2.zc" ];
#   then
#     echo "Can't find file input$2.zc"
#     exit 1
#   fi

#   if [ ! -f "${ASSERT}/out.input$2.zc" -a ! -f "${ERROR}/error.input$2.zc" ];
#   then
#     ../parser input$2.zc 2> "${ERROR}/error.input$2.zc"
#     if [ ! -s "${ERROR}/error.input$2.zc" ];
#     then
#       cp input$2.zc input$2.c
#       cc -o out input$2.c
#       ./out > assert/out.input$2.zc
#       rm -f input$2.c "${ERROR}/error.input$2.zc"
#     fi
#   fi
#   rm -f out out.s

#   (cd ..)
#   exit 0
# fi

for i in input*zc
do if [ ! -f "assert/out.$i" -a ! -f "error/error.$i" ]
   then
    echo "gen $i error..."
    ../parser -o out $i 2> "error/error.$i"
    echo "gen $i error Ok!"
    if [ ! -s "error/error.$i" ];
    then
      echo "gen $i assert..."
      cp $i ${i%%.*}.c
      cc -o out ${i%%.*}.c
      ./out > assert/out.$i
      echo "gen $i assert Ok!"
      rm -f ${i%%.*}.c "error/error.$i" ${i%%.*}.s
    fi
   fi
   rm -f out out.s
done
